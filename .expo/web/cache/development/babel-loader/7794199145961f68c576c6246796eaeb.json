{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\khush\\\\1.BarterSystem\\\\screens\\\\MyBartersScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Card, Icon, ListItem } from 'react-native-elements';\nimport MyHeader from \"../components/MyHeader.js\";\nimport firebase from 'firebase';\nimport db from \"../config.js\";\n\nvar MyBartersScreen = function (_Component) {\n  _inherits(MyBartersScreen, _Component);\n\n  var _super = _createSuper(MyBartersScreen);\n\n  function MyBartersScreen() {\n    var _this;\n\n    _classCallCheck(this, MyBartersScreen);\n\n    _this = _super.call(this);\n\n    _this.getAllBarters = function () {\n      _this.requestRef = db.collection(\"all_Barters\").where(\"donor_id\", '==', _this.state.userId).onSnapshot(function (snapshot) {\n        var allBarters = snapshot.docs.map(function (document) {\n          return document.data();\n        });\n\n        _this.setState({\n          allBarters: allBarters\n        });\n      });\n    };\n\n    _this.keyExtractor = function (item, index) {\n      return index.toString();\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i;\n      return React.createElement(ListItem, {\n        key: i,\n        title: item.item_name,\n        subtitle: \"Requested By : \" + item.requested_by + \"\\nStatus : \" + item.request_status,\n        leftElement: React.createElement(Icon, {\n          name: \"book\",\n          type: \"font-awesome\",\n          color: \"#696969\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }\n        }),\n        titleStyle: {\n          color: 'black',\n          fontWeight: 'bold'\n        },\n        rightElement: React.createElement(TouchableOpacity, {\n          style: styles.button,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 12\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: '#ffff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 14\n          }\n        }, \"Exchange\")),\n        bottomDivider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }\n      });\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      allBarters: []\n    };\n    _this.requestRef = null;\n    return _this;\n  }\n\n  _createClass(MyBartersScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAllBarters();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.requestRef();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 8\n        }\n      }, React.createElement(MyHeader, {\n        navigation: this.props.navigation,\n        title: \"My Barters\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 10\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 10\n        }\n      }, this.state.allBarters.length === 0 ? React.createElement(View, {\n        style: styles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 16\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 18\n        }\n      }, \"List of all Barters\")) : React.createElement(FlatList, {\n        keyExtractor: this.keyExtractor,\n        data: this.state.allBarters,\n        renderItem: this.renderItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }\n      })));\n    }\n  }]);\n\n  return MyBartersScreen;\n}(Component);\n\nMyBartersScreen.navigationOptions = {\n  header: null\n};\nexport { MyBartersScreen as default };\nvar styles = StyleSheet.create({\n  button: {\n    width: 100,\n    height: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: \"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    elevation: 16\n  },\n  subtitle: {\n    flex: 1,\n    fontSize: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/khush/1.BarterSystem/screens/MyBartersScreen.js"],"names":["React","Component","Card","Icon","ListItem","MyHeader","firebase","db","MyBartersScreen","getAllBarters","requestRef","collection","where","state","userId","onSnapshot","snapshot","allBarters","docs","map","document","data","setState","keyExtractor","item","index","toString","renderItem","i","item_name","requested_by","request_status","color","fontWeight","styles","button","auth","currentUser","email","flex","props","navigation","length","subtitle","fontSize","navigationOptions","header","StyleSheet","create","width","height","justifyContent","alignItems","backgroundColor","shadowColor","shadowOffset","elevation"],"mappings":"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","sourcesContent":["import React ,{Component} from 'react'\nimport {View, Text,TouchableOpacity,ScrollView,FlatList,StyleSheet} from 'react-native';\nimport {Card,Icon,ListItem} from 'react-native-elements'\nimport MyHeader from '../components/MyHeader.js'\nimport firebase from 'firebase';\nimport db from '../config.js'\n\nexport default class MyBartersScreen extends Component {\n  static navigationOptions = { header: null };\n\n   constructor(){\n     super()\n     this.state = {\n       userId : firebase.auth().currentUser.email,\n       allBarters : []\n     }\n     this.requestRef= null\n   }\n\n\n   getAllBarters =()=>{\n     this.requestRef = db.collection(\"all_Barters\").where(\"donor_id\" ,'==', this.state.userId)\n     .onSnapshot((snapshot)=>{\n       var allBarters = snapshot.docs.map(document => document.data());\n       this.setState({\n         allBarters : allBarters,\n       });\n     })\n   }\n\n   keyExtractor = (item, index) => index.toString()\n\n   renderItem = ( {item, i} ) =>(\n     <ListItem\n       key={i}\n       title={item.item_name}\n       subtitle={\"Requested By : \" + item.requested_by +\"\\nStatus : \" + item.request_status}\n       leftElement={<Icon name=\"book\" type=\"font-awesome\" color ='#696969'/>}\n       titleStyle={{ color: 'black', fontWeight: 'bold' }}\n       rightElement={\n           <TouchableOpacity style={styles.button}>\n             <Text style={{color:'#ffff'}}>Exchange</Text>\n           </TouchableOpacity>\n         }\n       bottomDivider\n     />\n   )\n\n\n   componentDidMount(){\n     this.getAllBarters()\n   }\n\n   componentWillUnmount(){\n     this.requestRef();\n   }\n\n   render(){\n     return(\n       <View style={{flex:1}}>\n         <MyHeader navigation={this.props.navigation} title=\"My Barters\"/>\n         <View style={{flex:1}}>\n           {\n             this.state.allBarters.length === 0\n             ?(\n               <View style={styles.subtitle}>\n                 <Text style={{ fontSize: 20}}>List of all Barters</Text>\n               </View>\n             )\n             :(\n               <FlatList\n                 keyExtractor={this.keyExtractor}\n                 data={this.state.allBarters}\n                 renderItem={this.renderItem}\n               />\n             )\n           }\n         </View>\n       </View>\n     )\n   }\n   }\n\n\nconst styles = StyleSheet.create({\n  button:{\n    width:100,\n    height:30,\n    justifyContent:'center',\n    alignItems:'center',\n    backgroundColor:\"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n       width: 0,\n       height: 8\n     },\n    elevation : 16\n  },\n  subtitle :{\n    flex:1,\n    fontSize: 20,\n    justifyContent:'center',\n    alignItems:'center'\n  }\n})\n"]},"metadata":{},"sourceType":"module"}