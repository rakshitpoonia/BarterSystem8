{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\khush\\\\1.BarterSystem\\\\screens\\\\SettingScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport MyHeader from \"../components/MyHeader\";\nimport db from \"../config\";\nimport firebase from 'firebase';\n\nvar SettingScreen = function (_Component) {\n  _inherits(SettingScreen, _Component);\n\n  var _super = _createSuper(SettingScreen);\n\n  function SettingScreen() {\n    var _this;\n\n    _classCallCheck(this, SettingScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      emailId: '',\n      firstName: '',\n      lastName: '',\n      address: '',\n      contact: '',\n      docId: ''\n    };\n    return _this;\n  }\n\n  _createClass(SettingScreen, [{\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      var user = firebase.auth().currentUser;\n      var email = user.email;\n      db.collection('users').where('username', '==', email).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var data = doc.data();\n\n          _this2.setState({\n            emailId: data.username,\n            firstName: data.first_name,\n            lastName: data.last_name,\n            address: data.address,\n            contact: data.mobile_number,\n            docId: doc.id\n          });\n        });\n      });\n    }\n  }, {\n    key: \"updateData\",\n    value: function updateData() {\n      db.collection('users').doc(this.state.docId).update({\n        first_name: this.state.firstName,\n        last_name: this.state.lastName,\n        address: this.state.address,\n        contact: this.state.contact\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: {\n          flex: 1,\n          width: '100%',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"First Name\",\n        maxLength: 8,\n        onChangeText: function onChangeText(text) {\n          _this3.setState({\n            firstName: text\n          });\n        },\n        value: this.state.firstName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Last Name\",\n        maxLength: 8,\n        onChangeText: function onChangeText(text) {\n          _this3.setState({\n            lastName: text\n          });\n        },\n        value: this.state.lastName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Contact\",\n        maxLength: 10,\n        keyboardType: 'numeric',\n        onChangeText: function onChangeText(text) {\n          _this3.setState({\n            contact: text\n          });\n        },\n        value: this.state.contact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Address\",\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          _this3.setState({\n            address: text\n          });\n        },\n        value: this.state.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Email\",\n        keyboardType: 'email-address',\n        onChangeText: function onChangeText(text) {\n          _this3.setState({\n            emailId: text\n          });\n        },\n        value: this.state.emailId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          _this3.updateData();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }\n      }, \" Save \"))));\n    }\n  }]);\n\n  return SettingScreen;\n}(Component);\n\nexport { SettingScreen as default };\nvar styles = StyleSheet.create({\n  formTextInput: {\n    width: \"75%\",\n    height: 35,\n    alignSelf: 'center',\n    borderColor: '#ffab91',\n    borderRadius: 10,\n    borderWidth: 1,\n    marginTop: 20,\n    padding: 10\n  },\n  button: {\n    width: \"75%\",\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: \"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/khush/1.BarterSystem/screens/SettingScreen.js"],"names":["React","Component","MyHeader","db","firebase","SettingScreen","state","emailId","firstName","lastName","address","contact","docId","user","auth","currentUser","email","collection","where","get","then","snapshot","forEach","doc","data","setState","username","first_name","last_name","mobile_number","id","update","getData","flex","alignItems","justifyContent","width","styles","formTextInput","text","button","updateData","StyleSheet","create","height","alignSelf","borderColor","borderRadius","borderWidth","marginTop","padding","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {View,Text, KeyboardAvoidingView,TextInput,StyleSheet,ScrollView,TouchableOpacity} from 'react-native';\nimport MyHeader from '../components/MyHeader'\nimport db from '../config'\nimport firebase from 'firebase'\n\nexport default class SettingScreen extends Component{\n  constructor(){\n    super();\n    this.state={\n      emailId:'',\n      firstName:'',\n      lastName:'',\n      address:'',\n      contact:'',\n      docId:''\n    }\n  }\n\n getData(){\n  var user = firebase.auth().currentUser;\n  var email= user.email\n\n db.collection('users').where('username','==',email).get()\n  .then(snapshot => {\n    snapshot.forEach(doc => {\n       var data = doc.data()\n       this.setState({\n         emailId: data.username,\n         firstName:data.first_name,\n         lastName:data.last_name,\n         address:data.address,\n         contact:data.mobile_number,\n         docId:doc.id\n       })\n    });\n  })\n\n}\n\n updateData(){\n\n  db.collection('users').doc(this.state.docId)\n    .update({\n      first_name: this.state.firstName,\n      last_name: this.state.lastName,\n      address:this.state.address,\n      contact:this.state.contact,\n    })\n}\n\ncomponentDidMount(){\n  this.getData()\n}\n\n\n\n    render(){\n        return(\n\n              <View style={{flex:1, alignItems: 'center',justifyContent: 'center'}} >\n                <MyHeader title=\"Settings\"/>\n                <View style={{flex:1,width:'100%',alignItems: 'center'}}>\n                <TextInput\n                  style={styles.formTextInput}\n                  placeholder ={\"First Name\"}\n                  maxLength ={8}\n                  onChangeText={(text)=>{\n                    this.setState({\n                      firstName: text\n                    })\n                  }}\n                  value ={this.state.firstName}\n                />\n                <TextInput\n                  style={styles.formTextInput}\n                  placeholder ={\"Last Name\"}\n                  maxLength ={8}\n                  onChangeText={(text)=>{\n                    this.setState({\n                      lastName: text\n                    })\n                  }}\n                    value ={this.state.lastName}\n                />\n                <TextInput\n                  style={styles.formTextInput}\n                  placeholder ={\"Contact\"}\n                  maxLength ={10}\n                  keyboardType={'numeric'}\n                  onChangeText={(text)=>{\n                    this.setState({\n                      contact: text\n                    })\n                  }}\n                    value ={this.state.contact}\n                />\n                <TextInput\n                  style={styles.formTextInput}\n                  placeholder ={\"Address\"}\n                  multiline = {true}\n                  onChangeText={(text)=>{\n                    this.setState({\n                      address: text\n                    })\n                  }}\n                    value ={this.state.address}\n                />\n                <TextInput\n                  style={styles.formTextInput}\n                  placeholder ={\"Email\"}\n                  keyboardType ={'email-address'}\n                  onChangeText={(text)=>{\n                    this.setState({\n                      emailId: text\n                    })\n                  }}\n                    value ={this.state.emailId}\n                />\n                <TouchableOpacity style={styles.button}\n                  onPress={()=>{this.updateData()}}>\n                  <Text> Save </Text>\n                </TouchableOpacity>\n                </View>\n\n              </View>\n\n\n\n\n\n        )\n    }\n}\n\n\nconst styles = StyleSheet.create({\n    formTextInput:{\n      width:\"75%\",\n      height:35,\n      alignSelf:'center',\n      borderColor:'#ffab91',\n      borderRadius:10,\n      borderWidth:1,\n      marginTop:20,\n      padding:10,\n    },\n    button:{\n        width:\"75%\",\n        height:50,\n        justifyContent:'center',\n        alignItems:'center',\n        // alignSelf: 'center',\n        borderRadius:10,\n        backgroundColor:\"#ff5722\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n           width: 0,\n           height: 8,\n        },\n        shadowOpacity: 0.44,\n        shadowRadius: 10.32,\n        elevation: 16,\n        marginTop:20\n      },\n\n}\n)"]},"metadata":{},"sourceType":"module"}