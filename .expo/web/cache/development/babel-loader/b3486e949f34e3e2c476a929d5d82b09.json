{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\khush\\\\1.BarterSystem\\\\screens\\\\Exchange.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport firebase from 'firebase';\nimport db from \"../config\";\nimport MyHeader from \"../components/MyHeader\";\n\nvar Exchange = function (_Component) {\n  _inherits(Exchange, _Component);\n\n  var _super = _createSuper(Exchange);\n\n  function Exchange() {\n    var _this;\n\n    _classCallCheck(this, Exchange);\n\n    _this = _super.call(this);\n\n    _this.addItem = function (itemName, description) {\n      var userName = _this.state.userName;\n      exchangeId = _this.createUniqueId();\n      db.collection(\"exchange_requests\").add({\n        \"username\": userName,\n        \"item_name\": itemName,\n        \"description\": description,\n        \"exchangeId\": exchangeId\n      });\n\n      _this.setState({\n        itemName: '',\n        description: ''\n      });\n\n      _this.setState({\n        itemName: '',\n        description: ''\n      });\n\n      return Alert.alert('Item ready to exchange', '', [{\n        text: 'OK',\n        onPress: function onPress() {\n          _this.props.navigation.navigate('HomeScreen');\n        }\n      }]);\n    };\n\n    _this.state = {\n      userName: firebase.auth().currentUser.email,\n      itemName: \"\",\n      description: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Exchange, [{\n    key: \"createUniqueId\",\n    value: function createUniqueId() {\n      return Math.random().toString(36).substring(7);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Add Item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }), React.createElement(KeyboardAvoidingView, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Item Name\",\n        maxLength: 8,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            itemName: text\n          });\n        },\n        value: this.state.itemName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        multiline: true,\n        numberOfLines: 4,\n        style: [styles.formTextInput, {\n          height: 100\n        }],\n        placeholder: \"Description\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            description: text\n          });\n        },\n        value: this.state.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: [styles.button, {\n          marginTop: 10\n        }],\n        onPress: function onPress() {\n          _this2.addItem(_this2.state.itemName, _this2.state.description);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#ffff',\n          fontSize: 18,\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, \"Add Item\"))));\n    }\n  }]);\n\n  return Exchange;\n}(Component);\n\nexport { Exchange as default };\nvar styles = StyleSheet.create({\n  formTextInput: {\n    width: \"75%\",\n    height: 35,\n    alignSelf: 'center',\n    borderColor: '#ffab91',\n    borderRadius: 10,\n    borderWidth: 1,\n    marginTop: 20,\n    padding: 10\n  },\n  button: {\n    width: \"75%\",\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: \"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/khush/1.BarterSystem/screens/Exchange.js"],"names":["React","Component","firebase","db","MyHeader","Exchange","addItem","itemName","description","userName","state","exchangeId","createUniqueId","collection","add","setState","Alert","alert","text","onPress","props","navigation","navigate","auth","currentUser","email","Math","random","toString","substring","flex","justifyContent","alignItems","styles","formTextInput","height","button","marginTop","color","fontSize","fontWeight","StyleSheet","create","width","alignSelf","borderColor","borderRadius","borderWidth","padding","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, StyleSheet, Text, TextInput,KeyboardAvoidingView,TouchableOpacity,Alert, ToastAndroid } from 'react-native';\nimport firebase from 'firebase';\nimport db from '../config';\nimport MyHeader from '../components/MyHeader'\n\nexport default class Exchange extends Component{\n\n  constructor(){\n    super()\n    this.state = {\n      userName : firebase.auth().currentUser.email,\n      itemName : \"\",\n      description : \"\"\n    }\n  }\n\n  createUniqueId(){\n    return Math.random().toString(36).substring(7);\n  }\n\n  addItem=(itemName, description)=>{\n    var userName = this.state.userName\n    exchangeId = this.createUniqueId()\n    db.collection(\"exchange_requests\").add({\n      \"username\"    : userName,\n      \"item_name\"   : itemName,\n      \"description\" : description,\n      \"exchangeId\"  : exchangeId\n     })\n     this.setState({\n       itemName : '',\n       description :''\n     })\n\n     this.setState({\n       itemName : '',\n       description :''\n     })\n\n     // NOTE: Comment below return statement when you test the app in ios\n     // ToastAndroid.showWithGravityAndOffset('Item ready to exchange',\n     //    ToastAndroid.SHORT,\n     //  );\n     // return this.props.navigation.navigate('HomeScreen')\n\n     // NOTE:  Comment the below return statement when you test the app in android\n     return Alert.alert(\n          'Item ready to exchange',\n          '',\n          [\n            {text: 'OK', onPress: () => {\n\n              this.props.navigation.navigate('HomeScreen')\n            }}\n          ]\n      );\n  }\n\n\n\n  render(){\n    return(\n      <View style={{flex:1}}>\n      <MyHeader title=\"Add Item\"/>\n      <KeyboardAvoidingView style={{flex:1,justifyContent:'center', alignItems:'center'}}>\n        <TextInput\n          style={styles.formTextInput}\n          placeholder ={\"Item Name\"}\n          maxLength ={8}\n          onChangeText={(text)=>{\n            this.setState({\n              itemName: text\n            })\n          }}\n          value={this.state.itemName}\n        />\n        <TextInput\n          multiline\n          numberOfLines={4}\n          style={[styles.formTextInput,{height:100}]}\n          placeholder ={\"Description\"}\n          onChangeText={(text)=>{\n            this.setState({\n              description: text\n            })\n          }}\n          value={this.state.description}\n\n        />\n        <TouchableOpacity\n          style={[styles.button,{marginTop:10}]}\n          onPress = {()=>{this.addItem(this.state.itemName, this.state.description)}}\n          >\n          <Text style={{color:'#ffff', fontSize:18, fontWeight:'bold'}}>Add Item</Text>\n        </TouchableOpacity>\n      </KeyboardAvoidingView>\n      </View>\n    )\n  }\n}\n\n\nconst styles = StyleSheet.create({\n  formTextInput:{\n    width:\"75%\",\n    height:35,\n    alignSelf:'center',\n    borderColor:'#ffab91',\n    borderRadius:10,\n    borderWidth:1,\n    marginTop:20,\n    padding:10\n  },\n  button:{\n    width:\"75%\",\n    height:50,\n    justifyContent:'center',\n    alignItems:'center',\n    borderRadius:10,\n    backgroundColor:\"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n       width: 0,\n       height: 8,\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n  },\n\n})\n"]},"metadata":{},"sourceType":"module"}